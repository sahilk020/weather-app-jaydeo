version: 0.2
 
 
env:  

  variables:

    GITLAB_REPO_URL: "https://github.com/sahilk020/weather-app-jaydeo.git"

    S3_BUCKET: "weatherapp-test"                        # Your S3 bucket name

    AWS_REGION: "eu-central-1"     # Your AWS region

    DATE_TIME: "default_value"                    

phases:

  install:

    commands:

      - echo "Installing necessary dependencies"

      - yum install git -y 

      - echo "Set Date And Time"

      - DATE_TIME=$(TZ='Asia/Kolkata' date +"%Y%m%d_%H%M%S")

      - export DATE_TIME   
 
 
  pre_build:

    commands:

      - echo "Using branch ${GIT_BRANCH}"

      # Uncomment and set COMPONENT variable as needed

      # - echo "Using components ${COMPONENT}"

      - echo "Cloning repository from branch ${GIT_BRANCH}"

      - git clone  https://github.com/sahilk020/weather-app-jaydeo.git

      - ls -la

      - echo "Installing Java 17..."

      - sudo yum install java-17-amazon-corretto -y

      # Register Java 17 as an alternative and set JAVA_HOME correctly

      - ls /usr/lib/jvm/java-17-amazon-corretto.x86_64/bin/java

      - sudo alternatives --install /usr/bin/java java /usr/lib/jvm/java-17-amazon-corretto.x86_64/bin/java 1
      - sudo alternatives --set java /usr/lib/jvm/java-17-amazon-corretto.x86_64/bin/java

      - export JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto

      - export PATH=$JAVA_HOME/bin:$PATH  # Immediate PATH update for this script

      - echo "export JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto.x86_64" >> ~/.bashrc
      - echo "export PATH=\$JAVA_HOME/bin:\$PATH" >> ~/.bashrc
      - source ~/.bashrc


      # Use the full path to check Java version

      - java -version || { echo "Java 17 not found!"; exit 1; }

       

      # Install Maven 3.8

      - echo "Installing Maven 3.8..."

      - wget "https://dlcdn.apache.org/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz" -o maven.tar.gz

      - tar -xvf apache-maven-3.8.8-bin.tar.gz

      - sudo mv apache-maven-3.8.8 /opt/

      - echo "export M2_HOME=/opt/apache-maven-3.8.8" >> ~/.bashrc

      - echo "export PATH=\$M2_HOME/bin:\$PATH" >> ~/.bashrc

      - echo "export MAVEN_OPTS="-Xmx512m"" >> ~/.bashrc 

      - echo $PATH

      - source ~/.bashrc


        # Verify Maven installation

      - mvn -version
 
      # Set DATE_TIME variable

      - export DATE_TIME=$(TZ='Asia/Kolkata' date +"%Y-%m-%d %H:%M:%S")

      - echo "DATE_TIME set to $DATE_TIME"

      # Prepare deployment directory

      - echo "Creating deployment directory..."

      - mkdir -p /opt/warfile

      # Ensure COMPONENT variable is set before using it

      # if [ -z "${COMPONENT}" ]; then echo "COMPONENT variable is not set"; else echo "Component name:${COMPONENT}"; fi

      - echo "Ready to deploy components"
 
  build:

    commands:

      - echo "Building the application for component:$COMPONENT"

      - cd user-service    # Navigate to the component directory

      - mvn clean install

      - mvn test
 
 
 
        
 
  post_build:

    commands:

      - echo "Checking for generated WAR files..."


      - cd /codebuild/output/src*/src/github.com/sahilk020/weather-app-jaydeo/user-service/target  # Verify the WAR files

      - ls -lrt 
      - cp *.war /opt/warfile
      
      - echo "Copying WAR files to S3..."

      #- aws s3 cp /user/*.war s3://pay10/war-file-store/cicd-releases/${DATE_TIME}/
      - DATE_TIME=$(date +"%Y-%m-%d_%H-%M-%S")

      - aws s3 cp /opt/warfile/ s3://weatherapp-test/nwe-artifacts/${DATE_TIME}/ --recursive --exclude "*" --include "*.war"
 
 
artifacts:

  files:

    - /opt/warfile/*.war

    # - /opt/code/codedeploy-files/appspec.yml   # Explicitly include appspec.yml

    # - /opt/code/codedeploy-files/scripts/*     # Include any required scripts for deployment

  name: codeBuildArtifacts

  discard-paths: yes

 